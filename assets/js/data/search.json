[ { "title": "Converting an Aruba AP to an Instant Access Point (Without a Mobility Controller)", "url": "/posts/Converting_Aruba_AP_to_IAP/", "categories": "network, wifi", "tags": "network, wap, access point, aruba, iap", "date": "2023-04-13 01:00:00 +0900", "snippet": "Prerequisites DHCP Server on the network Recommended: Configure Open 43 for automatic NTP time synchronization. The aruba AP will use this to set the correct time. A TFTP server. On Windows I recommended TFTPD64 A Serial cable for connecting to the Aruba access point directly. (e.g. DSD TECH SH-U09BL USB-TTL Serial Cable with CP2102N) On Windows for serial connections you will need Putty and on Linux the minicom package should work just fine. This guide is mainly focused on using Linux.Downloading the Aruba Instant Access Point firmware At the time of writhing it is possible to download the latest release of Instant Access Points without a HPE account. Simply look at the file name of the release you want to download on their portal, in my case ArubaInstant_Hercules_8.4.0.0_68230 then use wget while appending http://common.cloud.hpe.com/ccssvc/ccs-system-firmware-registry/IAP/ to the firmware release name. wget http://common.cloud.hpe.com/ccssvc/ccs-system-firmware-registry/IAP/ArubaInstant_Hercules_8.11.1.0_86591 --2023-04-11 13:20:40-- http://common.cloud.hpe.com/ccssvc/ccs-system-firmware-registry/IAP/ArubaInstant_Hercules_8.11.1.0_86591 ArubaInstant_Hercules_8.11.1.0_8 100%[=========================================================&gt;] 22.29M 18.4MB/s in 1.2s 2023-04-11 13:20:42 (18.4 MB/s) - ‘ArubaInstant_Hercules_8.11.1.0_86591’ saved [23370908/23370908] Setting up a TFTP Server on Debian/Ubuntu Allow TFTP network access (if you are using UFW) sudo ufw allow tftp &amp;&amp; sudo ufw reload &amp;&amp; sudo ufw status numbered Install the tftp service and tftp client. sudo apt install tftpd-hpa tftp Create a directory for hosting files on the tftp server. sudo mkdir /opt/tftp-rootsudo chown tftp:tftp /opt/tftp-root Edit the following flie /etc/default/tftpd-hpa and update the folder location to match the directory you created earlier. # /etc/default/tftpd-hpa TFTP_USERNAME=\"tftp\"TFTP_DIRECTORY=\"/opt/tftp-root\"TFTP_ADDRESS=\":69\"TFTP_OPTIONS=\"--secure\" Restart the service sudo systemctl restart tftpd-hpa &amp;&amp; sudo systemctl status tftpd-hpa If you are only going to use this tftp server for adhoc firmware updates then disable automatic startup. sudo systemctl disable tftpd-hpa Move your downloaded IAP firmware into the tftp directory and set the correct permissions. sudo mv ArubaInstant_Hercules_8.11.1.0_86591 /opt/tftp-root/sudo chown tftp:tftp -R /opt/tftp-root Test if you can download locally on your PC. cd ~tftp localhosttftp&gt; binarytftp&gt; get /ArubaInstant_Hercules_8.11.1.0_86591Received 23370908 bytes in 0.4 secondstftp&gt; quitls Stopping tftpd-hpa on your PC When you have done using tftp-hpa its good practice to close the open holes and stop the service from running. sudo ufw delete allow 69/udp &amp;&amp; sudo ufw reloadsudo systemctl stop tftpd-hpa ProcedurePart 1 - Connecting the console cable Firstly you will need a serial adpator for connecting to Aruba access ports. As the serial connection is not a standard RJ45 connector like with other network devices I would recommend purchasing a breakout serial adaptor much like the one pictured below. DSD TECH SH-U09BL w/ CP2102N Chip The console port is located under a rubber plug on the 300 series from Aruba. Lift up the rubber plug to expose the 4 pin connector. Console Port Location Connect the TX, RX,and Ground (GND) pins only. Console Port Pin Out On your PC you will need minicom installed. sudo apt install -y minicom Plug in the USB serial adaptor to your PC and locate the device name. In this case I used a grep on the kernel logs and found the device was ttyUSB0. grep tty /var/log/kern.logApr 11 12:54:59 MYPC kernel: [2932193.187613] usb 3-5: FTDI USB Serial Device converter now attached to ttyUSB0 Connect to the device using minicom sudo minicom -b 9600 -o -D /dev/ttyUSB0 Connect the network cable (PoE) to power up the AP. If you don’t see any console output on your PC then you might need to reverse the TX and TX connectors which I had to do in my case with this particular USB adaptor. If your keyboard input is not working make sure the HW and SW Flow Control is disabled with minicom.Part 2 - Reflashing to Aruba Instant Access Point (IAP) Power on / Power cycle the access point. Interrupt the apboot boot process by pressing enter. (Need to be quick) APBoot 1.5.5.7 (build 56398)Built: 2016-09-08 at 14:21:29 Model: AP-31xDRAM: 491 MBSF: Detected MX25U3235F with page size 64 kB, total 4 MBFlash: 4 MBNAND: 132 MiBPCIE0: link upPCIE1: link up dev fn venID devID class rev MBAR0 MBAR1 MBAR2 MBAR3 00 00 168c 0046 00002 00 00000004 00000000 00000000 00000000Power: 802.3at POEIn: serialOut: serialErr: serialNet: eth0Radio: qca9983#0, qca9990#1Reset: coldFIPS: passed Hit &lt;Enter&gt; to stop autoboot: 0 apboot&gt; apboot&gt; You will need to get the serial number of the AP. A quick easy way is to simply type in mfginfo to display the hardware information of the device. apboot&gt; mfginfoInventory:Card 0: System Wired MAC : 38:17:c4:c3:b4:00 Wired MAC Count : 2 Serial : CNF3J0TXBY # &lt;&lt;&lt; here 3 Date Code : 111017Card 1: CPU Assembly : 2010252C Major Rev : 06 Minor Rev/Variant : 00 Date Code : 111017Card 2: Antenna Minor Rev/Variant : 01 Back on your Linux make (make sure you have openssl installed) use the serial number to generate a SHA1 hash with the region of your AP e.g. US (USA), RW (Rest of the World) and the serial number. In this example our AP is in the US region and the serial number is CNF3J0TXBY. It is also possible to change the region using this step as well (I personally have not validated this though). echo -n \"US-CNF3J0TXBY\" | openssl sha1SHA1(stdin)= 8f75c7d6e48fa2d974c23a6107bbff1997149c17 Using the has generated sha1 has use the following command on the AP to set the region. proginv system ccode CCODE-US-8f75c7d6e48fa2d974c23a6107bbff1997149c17 Then type in invent -w to convert AP to IAP. invent -w Bring up the network interface of the AP. # If your network has DHCPdhcp# If you need to setup a static IP addresssetenv ipaddr 192.168.41.10 Configure the TFTP Server address setenv serverip 192.168.41.5 Download the IAP boot images from the TFTP server and apply them to both boot partitions. upgrade os 0 ArubaInstant_Hercules_8.11.1.0_86591# wait for the image to be applied, then:upgrade os 1 ArubaInstant_Hercules_8.11.1.0_86591 Perform a factory reset. factory_reset Save the environment to make sure the “turn off mobility” will not appear saveenv Then reset the device. reset After the device has rebooted, if you want to use the console login the username is admin and the password is the devices serial number e.g. CNF3J0TXBY. If you need to know the DHCP assigned IP of the access point after logging in you can type in show ip interface brief When logging in for the first time if you see this error Internal error 8-0, please contact support it just means the device is still initializing. Try again in a few minutes.References Server the Home Forum - Aruba AP to IAP" }, { "title": "Setup Debian/Ubuntu (Gnome) with Passwordless Logins (U2F and Fingerprint)", "url": "/posts/Debian-Passwordless-Authentication/", "categories": "linux, server", "tags": "yubikey, linux, debian, u2f, fingerprint, passwordless", "date": "2023-04-08 03:00:00 +0900", "snippet": "Setup Debian/Ubuntu (Gnome) with Passwordless Logins (U2F and Fingerprint)A short guide covering U2F (With a Yubikey) and Fingerprint logins for your PC. Instal the U2F Pam Module sudo apt install -y libpam-u2f yubikey-manager yubikey-manager-qt Set a FIDO PIN on your Yubikey (If you haven’t done so already) ykman fido access change-pin Create a user to u2f mapping while your Yubikey is inserted. You can add as many keys as you like. Also it is good idea to set the permission of the newly created file to 600. pamu2fcfg -u$(whoami) | sudo tee /etc/u2f_mappingssudo chmod 600 /etc/u2f_mappings Edit the gdm-password file. sudo nano /etc/pam.d/gdm-password Then add the following line at the top of the auth section of the gmd-password file. auth sufficient pam_u2f.so authfile=/etc/u2f_mappings cue pinverification=1 The pinverification=1 will ensure the you are prompted for a PIN. The will prevent anyone with access to your Yubikey to login into your PC unless they know the PIN of your Yubikey. ref. https://developers.yubico.com/pam-u2f/Fingerprint Setup and EnrolementIn addition to U2F we can also enroll a finger on your laptop. Install the required pacakges. sudo apt install fprintd libpam-fprintd Enable the pam module. sudo pam-auth-update --enable fprintd Enroll your finder. You can choose the following parameters for the finger type. left-thumb, left-index-finger, left-middle-finger, left-ring-finger, left-little-finger, right-thumb, right-index-finger, right-middle-finger, right-ring-finger, right-little-finger. fprintd-enroll -f right-middle-finger Then enrolled signatures are stored here:/var/lib/fprint" }, { "title": "Windows Server DHCP and PowerShell", "url": "/posts/windows-dhcp-with-powershell/", "categories": "windows server", "tags": "dhcp, windows, powershell", "date": "2023-02-01 03:00:00 +0900", "snippet": "I was recently tasked with setting Windows DHCP Server with powershell. Coming from isc-dhcp-server on Linux some basic options such as DNS Search Suffix (113) or setting up scopes in bulk can be tedious through the GUI, so this post details some common tasks that one might go through for setting up DHCP server from scratch in powershell.Common DHCP OptionsDNS Search ListAs the DHCP option expects an HEX array we need to convert the search list into a HEX array. Create the DHCP Option Add-DhcpServerv4OptionDefinition -Name \"DNS Search List\" -OptionId 119 -Type Byte -MultiValued Setup the variables for the search list and the scope you want to target. $DNS_SEARCH_LIST = \"example1.local;coffee.local;karubits.local\"$TARGET_SCOPE = \"10.2.4.0\" Convert the DNS search list and add the DHCP Option to the scope. $splittedDomainSearchList = $DNS_SEARCH_LIST -split \"\\;\"$DNS_SEARCH_LISTHexArray = @(); Foreach ($domain in $splittedDomainSearchList) { $splittedDomainParts = $domain -split \"\\.\" Foreach ($domainPart in $splittedDomainParts) { $domainPartHexArray = @() $domainPartHexArray += $domainPart.Length $domainPartHexArray += $domainPart.ToCharArray(); Foreach ($item in $domainPartHexArray) { $DNS_SEARCH_LISTHexArray += [System.Convert]::ToUInt32($item) } } $DNS_SEARCH_LISTHexArray+= 0x00} # Add the DNS Search list as an hex array to the target scopeSet-DhcpServerv4OptionValue -ScopeId $TARGET_SCOPE -OptionId 119 -Value $DNS_SEARCH_LISTHexArray TimeZone OptionsA common use case for setting the timezone options in DHCP can be for VOIP phones and getting the time to be displayed correctly. There are two DHCP options that can be created and set. Option ID 100 and 101.To read more about the specifics of the option I recommend reader the following link. Create the DHCP options for 100 and 101. In this example the timezone is specified for Japan. Add-DhcpServerv4OptionDefinition -Name PCode -Description \"TZ-POSIX String\" -OptionId 100 -Type \"String\" # JST-9Add-DhcpServerv4OptionDefinition -Name TCode -Description \"TZ-Database String\" -OptionId 101 -Type \"String\" You can set the default value globally instead of the scope level if your DHCP server resides in a single TZ. Set-DhcpServerv4OptionValue -OptionId 101 -Value \"Asia/Tokyo\"Set-DhcpServerv4OptionValue -OptionId 100 -Value \"JST-9\" Unifi Network Controller (L3 Adoption)If you have a Unifi Network Controller you can create a vendor specific option and define the IP address of the network controller for automatic discovery of Unifi devices. First create the vendor class for Ubiquiti Add-DhcpServerv4Class -Name Ubiquiti -data \"ubnt\" -Type \"Vendor\" Create the new DHCP Option Add-DhcpServerv4OptionDefinition -Name \"UniFi Controller\" -OptionId 1 -Type \"BinaryData\" -VendorClass \"Ubiquiti\" -Description \"Unifi Controller IP as Hex Object\" We can specify the controller IP address and the DHCP scope you want to add the L3 adoption IP address to. $UNIFI_CONTROLLER_IP = \"10.5.22.12\"$SCOPE = \"10.7.5.0\" Convert the Unifi controller into a hex $ip = \"$UNIFI_CONTROLLER_IP\"$octets = $ip.Split(\".\")$hexOctets = @()foreach ($octet in $octets) { $hexOctets += \"0x{0:X2}\" -f [int]$octet}$hexOctets -join \", \" Add the DHCP Option to the target scope. # Add the controller IP option to the target scopeSet-DhcpServerv4OptionValue -VendorClass 'Ubiquiti' -OptionId 001 -Value $hexOctets -ScopeId $SCOPE Example of creating DHCP scopes in Bulk To create DHCP scopes in bulk one approach is to define the scopes and options in a CSV file. Then use a powershell script to import the CSV and loop through each row. Here is an example of a CSV. Name,Description,ScopeID,StartRange,EndRange,LeaseDuration,SubnetMask,Router,DnsDomain,DNSServer,NTPServers,DNSDomainSearch 102_EMPLOYEES,Tokyo Employees - VLAN: 102 (172.16.150.0/24),172.16.150.0,172.16.150.100,172.16.150.220,18.00:00:00,255.255.255.0,172.16.150.1,employees.karubits.com,\"1.1.1.1,1.0.0.1,8.8.8.8\",\"192.168.88.1,10.2.25.3,10.2.25.10,10.2.25.11,192.168.88.14\",\"employees.karubits.com,global.karubits.com,karubits.local\" 103_GUEST,Tokyo Guests - VLAN: 103 (192.168.244.0/24),192.168.244.0,192.168.244.100,192.168.244.220,18.00:00:00,255.255.255.0,192.168.244.1,guests.karubits.com,\"1.1.1.1,1.0.0.1,8.8.8.8\",\"192.168.88.1,10.2.25.3,10.2.25.10,10.2.25.11,192.168.88.14\",guests.karubits.com Then use powershell to import the CSV and loop through each row. # Import the CSV file $data = Import-Csv -Path 'dhcp_scopes.csv' # Loop through each row in the CSV file foreach ($row in $data) { # Create a new DHCP scope $ScopeID = $row.ScopeID $DnsServer = $row.DNSServer.Split(',') $Router = $row.Router $DnsDomain = $row.DnsDomain $NTPServers = $row.NTPServers.Split(',') $DomainSearchList = $row.DNSDomainSearch $Name = $row.Name # Check if scope already exists $ScopeExists = Get-DhcpServerv4Scope | Where-Object { $_.ScopeId -eq $ScopeID } # If scope does not exist, create it if (!$ScopeExists) { Add-DhcpServerv4Scope -Name $Name -Description $row.Description -SubnetMask $row.SubnetMask -StartRange $row.StartRange -EndRange $row.EndRange -LeaseDuration $row.LeaseDuration } else { Write-Host \"Scope with ID $ScopeID already exists, skipping creation\" } # Add DNS servers, DNS Domain, and Default Gateway to the DHCP scope Set-DhcpServerv4OptionValue -ScopeId $ScopeID -DNSServer $DnsServer -DnsDomain $DnsDomain -Router $Router # Add NTP servers to the DHCP scope Set-DHCPServerv4optionvalue -ScopeId $ScopeID -OptionId 042 -Value $NTPServers # Convert the domain search list into a HEX array $splittedDomainSearchList = $DomainSearchList -split \"\\;\" $domainSearchListHexArray = @(); # Convert the domain search list into a hex array Foreach ($domain in $splittedDomainSearchList) { $splittedDomainParts = $domain -split \"\\.\" Foreach ($domainPart in $splittedDomainParts) { $domainPartHexArray = @() $domainPartHexArray += $domainPart.Length $domainPartHexArray += $domainPart.ToCharArray(); Foreach ($item in $domainPartHexArray) { $domainSearchListHexArray += [System.Convert]::ToUInt32($item) } } $domainSearchListHexArray+= 0x00 } # Set the domain search list with its HEX value Set-DhcpServerv4OptionValue -ScopeId $ScopeID -OptionId 119 -Value $domainSearchListHexArray } Migrating DHCP reservations from pfsense This python script will read the config.xml of a pfsense configuration and create a CSV file containg the MAC Address, IP Address, and description. ## Static Leases from pfsense # Python to read the config.xml and write the static leases out to csv import xml.etree.ElementTree as ET import csv # parse the xml file tree = ET.parse('config.xml') root = tree.getroot() # open a csv file for writing with open('static-dhcp-entries.csv', 'w', newline='') as csvfile: # create a csv writer csvwriter = csv.writer(csvfile) # write the header row csvwriter.writerow(['mac', 'ipaddr', 'descr']) # iterate over all staticmap elements for staticmap in root.findall('.//staticmap'): # extract the values of mac, ipaddr, and descr mac = staticmap.find('mac').text ipaddr = staticmap.find('ipaddr').text descr = staticmap.find('descr').text # write the values to the csv file csvwriter.writerow([mac, ipaddr, descr]) Windows Server DHCP requires a name for the dhcp reservation and in this case they were manually added to the CSV. Then to import the DHCP reservations we can use powershell to read the csv file. # DHCPv4 Reservations Creation Script # This script reads a CSV file containing DHCP reservations information and creates the reservations in the DHCP server. # It handles the following: # - CSV headers match the same name as the PowerShell parameters # - The scope ID uses the IP address, but changes the last octet to 0 (e.g. 192.168.2.23 becomes 192.168.2.0) # - The MAC address format is 00:17:fc:6f:3c:78, which is converted to 00-17-fc-6f-3c-78 # - Assumes the -Type is set to \"Both\" for all reservations # Check to see if the CSV file exists. $file = \"pfsense-static-leases.csv\" if (!(Test-Path $file -PathType Leaf)) { Write-Error \"Error: File $file not found\" return } # Import the DHCP reservations data from the CSV file Import-Csv $file | ForEach-Object { # Assign the values from the CSV to variables $ip = $_.'IP Address' $name = $_.'Name' $mac = $_.'Mac Address' -replace ':', '-' $description = $_.'Description' $scopeid = ($_.'IP Address'.Split('.')[0..2] -join '.') + '.0' # Check if the reservation already exists if (!(Get-DhcpServerv4Reservation -ScopeId $scopeid -ClientId $mac -ErrorAction SilentlyContinue)) { # If the reservation does not exist, display a message and create the reservation Write-Host -ForegroundColor Green \"Creating reservation for $name with IP address $ip and MAC address $mac\" Add-DhcpServerv4Reservation -ScopeId $scopeid -IPAddress $ip -ClientId $mac -Name $name -Type \"Both\" -Description $description } else { # If the reservation already exists, display a message and skip creating it Write-Host -ForegroundColor Green \"Updating reservation for $name with IP address $ip and MAC address $mac as it already exists.\" \tSet-DhcpServerv4Reservation -IPAddress $ip -ClientId $mac -Name $name -Type \"Both\" -Description $description } } " }, { "title": "Proxmox cloud-init templates", "url": "/posts/proxmox-cloud-init-templates/", "categories": "proxmox", "tags": "template, cloud-init, vm, linux", "date": "2022-12-27 10:00:00 +0900", "snippet": "Introduction and whyTODODownload cloud templates of your preferred distributionsListed below are the official download links for Debian and Ubuntu release Distro Release Download Checksum Debian 11 Bullseye (Backports) 💿 🔑 Debian 11 Bullseye 💿 🔑 Debian 10 Buster 💿 🔑 Ubuntu 20.04 LTS Focal Fossa 💿 🔑 Ubuntu 18.04 LTS Bionic Beaver 💿 🔑 Rocky Linux 9 💿 🔑 Rocky Linux 8 💿 🔑 Alama Linux 8 💿 🔑 Alama Linux 9 💿 🔑 Kali 2022.4 💿 🔑 Fedora 37 💿 🔑 Or just download them all in one shot:cd /tmpecho \"Downloading Debian 11 Backports...\"wget https://cloud.debian.org/images/cloud/bullseye-backports/latest/debian-11-backports-generic-amd64.qcow2echo \"Downloading Debian 11...\"wget https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2echo \"Downloading Debian 10..\"wget https://cloud.debian.org/images/cloud/buster/latest/debian-10-genericcloud-amd64.qcow2`echo \"Downloading Ubuntu Focal...\"wget https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.imgecho \"Downloading Ubuntu Bionic...\"wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.imgecho \"Downloading Rocky 9...\"wget https://dl.rockylinux.org/pub/rocky/9/images/x86_64/Rocky-9-GenericCloud-Base.latest.x86_64.qcow2.echo \"Downloading Rocky 8...\"wget https://dl.rockylinux.org/pub/rocky/8/images/x86_64/Rocky-8-GenericCloud-Base.latest.x86_64.qcow2echo \"Downloading Kali Linux...\"wget https://kali.download/cloud-images/current/kali-linux-2022.4-cloud-genericcloud-amd64.tar.xztar -xvf kali-linux-2022.4-cloud-genericcloud-amd64.tar.xzrm kali-linux-2022.4-cloud-genericcloud-amd64.tar.xzConfirm the checksum status To confirm the checksum of an image with Debian below is an example. echo $(curl https://cloud.debian.org/images/cloud/bullseye/latest/SHA512SUMS | grep debian-11-genericcloud-amd64.qcow2 | awk '{ print $1 }' ) debian-11-genericcloud-amd64.qcow2 | sha512sum --check Creating your first VM template with a cloud image. Setup the initial variables. VM_TEMPLATE_ID=9001VM_PASSWORD=supercrect # &lt; Clear text inputVM_USER=karubitsTEMPLATE_NAME=debian-cloud-templateCLOUD_IMAGE=focal-server-cloudimg-amd64.imgSTORAGE=nvme-2tb Create the initial template with the minimum values. qm create $VM_TEMPLATE_ID \\ --name $TEMPLATE_NAME \\ --core 2 \\ --memory 2048 \\ --net0 virtio,bridge=vmbr0 \\ --ide2 $STORAGE:cloudinit \\ --serial0 socket \\ --vga serial0 \\ --onboot 1 \\ --agent 1,fstrim_cloned_disks=1 \\ --tablet 0 \\ --ostype l26 Import the downloaded disk image into the new VM template. qm importdisk $VM_TEMPLATE_ID \\ $CLOUD_IMAGE \\ $STORAGE Add the virtual disk controller and attached the imported disk to the template. qm set $VM_TEMPLATE_ID \\ --scsihw virtio-scsi-pci \\ --scsi0 $STORAGE:vm-$VM_TEMPLATE_ID-disk-0,discard=on,ssd=1 \\ --boot c \\ --bootdisk scsi0 Configure the default values for your cloud-init template. This can also be done on the Promxox UI: qm set $VM_TEMPLATE_ID \\ --nameserver=\"10.7.7.3 10.7.7.2\" \\ --searchdomain=core.io \\ --ipconfig0=ip=dhcp \\ --ciuser=$VM_USER \\ --cipassword=$VM_PASSWORD Lastly, convert the VM into a template with the following command: qm template $VM_TEMPLATE_ID Create a new VM from the template for testing Before cloning the VM I use a variable to find the next available VM ID as the clone command requires you to set an ID. Then take a full a clone of the new template. NEXT_VM=$(pvesh get /cluster/nextid)qm clone $VM_TEMPLATE_ID $NEXT_VM \\ --full=true \\ --name=wow-so-quick-to-deploy As the default image size is very small (247mb for Debian), expand the disk to make the VM useful and then start the VM: qm resize $NEXT_VM scsi0 +15Gqm start $NEXT_VM Your new VM from your template should now be starting. with all your new setting setReferences Proxmox Wiki - Cloud-Init Support Proxmox VE - How to build an Ubuntu 22.04 Template (Updated Method) - Video Proxmox VE – How to build an Ubuntu 22.04 Template (Updated Method) - Blog" }, { "title": "Firmware upgrade Intel DC SSD on Linux", "url": "/posts/Firmware-Upgrade-Intel-DC-SSD-on-Linux/", "categories": "server", "tags": "server. dell, intel, proxmox, firmware", "date": "2022-12-21 10:00:00 +0900", "snippet": "Server Preperation / Hardware NotesIntel Datacenter SSD Firmware At the time of writting, Intel’s NAND SSD business has been acquired by Solidigm. The tooling which was previously called Intel MAS is no longed supported.This example will cover upgrading the firwmare of Intel DC series firmware on a Debian operating system. This same steps are applicable to Proxmox hypervisors as well.This example will cover upgrade the Intel DC P4510 and the same steps will cover other Intel DC series firmware as well.Links, Guides, and Downloads Download the latest SST package from Solidigmhere For advanced usuage of the SST tool you can refer to the CLI User Guide here. At the time of writing v1.4 was the latest.Procedure Download the SST tool directly on the server (v1.4 link below). wget https://sdmsdfwdriver.blob.core.windows.net/files/kba-gcc/drivers-downloads/ka-00085--sst/sst--1-4/sst-cli-linux-deb--1-4.zip Exact the package unzip sst-cli-linux-deb--1-4.zip Install the SST CLI tool (Debian x64) dpkg -i sst_1.4.221-0_amd64.deb View available SSDs and confirm which ones can be upgraded. sst show -ssd - PHLJ0373032N2P0BGN 1 - Bootloader : 0203 Capacity : 2.00 TB (2,000,398,934,016 bytes) DevicePath : /dev/nvme0n1 DeviceStatus : Healthy Firmware : VDV10131 FirmwareUpdateAvailable : Firmware=VDV10184 Bootloader=VB1B0181 Index : 0 MaximumLBA : 3907029167 ModelNumber : INTEL SSDPE2KX020T8 NamespaceId : 1 PercentOverProvisioned : 100.00 ProductFamily : Intel SSD DC P4510 Series SMARTEnabled : True SectorDataSize : 512 SerialNumber : PHLJ0373032N2P0BGN Note the Index number if you can see a new update listed in the ‘FirmwareUpdateAvailable’ field. Trigger the upgrade sst load -force -ssd 0 Checking for firmware update... - Intel SSD DC P4510 Series PHLJ0373032N2P0BGN - Status : Firmware updated successfully. Please reboot the system. Then reboot the system for the new firmware to take effect." }, { "title": "Linux VNC Server", "url": "/posts/Linux-VNC-Server/", "categories": "linux", "tags": "linux, vnc", "date": "2022-09-17 10:00:00 +0900", "snippet": "How to setup a VNC Server on LinuxOn the PC / Desktop you want to access Install the X11 Server sudo apt install -y x11vnc Then setup the initial password x11vnc -usepw Press Ctrl+C to close the vnc server session. On the remote PC You can add the command to start the vnc server on the remote PC in your ~/.ssh/config as below. This approach means the vnc-server is only running when you need it. Host remote-pc-vnc User karubits Hostname 192.168.139.128 LocalForward 5901 localhost:5901 RemoteCommand x11vnc -localhost -display :1 -usepw -rfbport 5901 -ncache 10 Then ssh the remote PC you want to see the desktop on ssh remote-pc-vnc Then open your vnc viewer and connect to the localhost of your PC. VNC Viewer - localhost connection" }, { "title": "Linux Storage Notes", "url": "/posts/Linux-Storage-Notes/", "categories": "linux, storage", "tags": "storage, ssd, hdd, disks, linux, lpic, notes", "date": "2022-09-01 10:00:00 +0900", "snippet": "A collection of rough notes around managing storage in Linux1. Drive sanitizationNIST Publiciation 800-88 Rev 1 - Guidelines for Media Sanitization1.1 Secure Erase for NVME Drive Install the nvme-cli tools sudo apt install -y nvme-cli confirm which disk to target lsblk -o name,model,serial,type | grep nvme | grep disk or nvme list Perform a crytographic erase sudo nvme format --ses=2 /dev/nvme2n1 Value Definition 1 User Data Erase: All user data shall be erased, contents of the user data after the erase is indeterminate (e.g., the user data may be zero filled, one filled, etc). The controller may perform a cryptographic erase when a User Data Erase is requested if all user data is encrypted. 2 Cryptographic Erase: All user data shall be erased cryptographically. This is accomplished by deleting the encryption key. If you see the follow: NVMe status: INVALID_FORMAT: The LBA Format specified is not supported. This may be due to various conditions(0x410a) Put the PC to sleep/suspend and wake it backup and rerun the command.1.2 Secure Erase a SATA Drive Install hdparm sudo apt install -y hdparm Identify the disk to format. lsblk -o name,model,serial,type Ensure the SATA Drive supports security erase enchanced mode and the disk is “not frozen”. If the disk says frozen then put the PC to sleep and wake it up again. sudo hdparm -I /dev/sdX Secure erase the disk sudo hdparm --user-master u --security-erase-enhanced password /dev/sdX# If enchanced security erase is not supported:sudo hdparm --user-master u --security-set-pass password /dev/sdX " }, { "title": "Server Firmware Notes", "url": "/posts/Server-Firmware/", "categories": "server", "tags": "server. dell, mellanox, firmware", "date": "2022-08-21 10:00:00 +0900", "snippet": "Server Preperation / Hardware NotesDell ServeriDrac - racdm notesiDrac tools includes a executable called racadm for managing the idrac controller on Dell Servers. On the latest version of iDRAC tools for Linux they have also included Ubuntu (Debian works) support.Direct Download Links posted below: Dell EMC iDRAC Tools for Linux, v10.1.0.0 Dell EMC iDRAC Tools for Windows Server(R), v10.2.0.0Listed below is an example of a batch file for making various changes to the idrac configuration.# Upgrade to latest iDrac FW before starting SET racadmPath=\"c:\\Program Files\\Dell\\SysMgt\\iDRACTools\\racadm\\\"SET idracTarget=%1 REM # View and backup your license (Note: I found white lines added to the xml. If you need to import you will have to remove)%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn license view%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn license export -c iDRAC.Embedded.1 REM # Factory Reset (You 'may' lose your license, also iDrac sets a default static IP. You will need to go to the console and set it back to dhcp via F2 from the bios prompt)%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn racresetcfg REM # Set DNS from DHCP and register the DNS Name%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.IPv4.DNSFromDHCP 1%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Nic.DNSRegister 1 REM # Set console to HTML5 by default%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.VirtualConsole.PluginType HTML5 REM # Disable telnet%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.Telnet.Enable 0 REM # Disable default password warning%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Tuning.DefaultCredentialWarning Disabled REM # Set correct time%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.time.timezone Japan%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.NTPConfigGroup.ntp1 10.2.25.2%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.NTPConfigGroup.ntp2 10.2.25.3%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.NTPConfigGroup.ntp3 ntp.nict.jp%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set idrac.NTPConfigGroup.NTPEnable 1 REM # Generate SSL%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn config -g cfgRacSecurity -o cfgRacSecCsrKeySize 2048%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn sslresetcfg%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn clrsel REM # Set to high performance profile (reported on proxmox forums as having a impact on performance)%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set BIOS.SysProfileSettings.SysProfile PerfOptimized%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn jobqueue create BIOS.Setup.1-1 REM # Reboot iDRAC%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn racresetping %idractarget% -t REM # Create our standard account%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Tuning.DefaultCredentialWarning Disabled%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Users.3.UserName $IDRAC_USER%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Users.3.Password $IDRAC_PASSWORD%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Users.3.Privilege 0x1ff%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Users.3.Enable 1 REM # Disable the default user account%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn set iDRAC.Users.2.Enable 0 REM # Optional if you lose your license (note: you may need to remove any lines with white spaces as the cli export seems to add them and you get a error saying the file is corrupt)%racadmPath%racadm.exe -r %idracTarget% -u root -p calvin --nocertwarn license import -f 21S0GB2_FD00000005765970.xml -c iDRAC.Embedded.1MellanoxBelow is a quick reference for upgrading the firmware of Mellanox Connect-X series cards.Prerequisites A computer with Ubuntu/Debian installed and a internet connection. Download the NVIDIA Firmware Tools (MFT) tools for Debian here: http://www.mellanox.com/page/management_tools. Direct link for Debian x64 MST tools v4.2.0.99 is hereInstallation:sudo apt-get install -y gcc make dkms linux-headers-`uname -r`sudo dpkg -i mft_4.21.0-99_amd64.debStart Mellanox MST:root@debian:~/mft-4.11.0-103-x86_64-deb# mst startStarting MST (Mellanox Software Tools) driver setLoading MST PCI module - SuccessLoading MST PCI configuration module - SuccessCreate devicesConfirm the card is present:root@debian:~/Downloads/mft-4.11.0-103-x86_64-deb# mst status -vMST modules:------------ MST PCI module loaded MST PCI configuration module loadedPCI devices:------------DEVICE_TYPE MST PCI RDMA NET NUMA ConnectX3Pro(rev:0) /dev/mst/mt4103_pciconf3 ConnectX3Pro(rev:0) /dev/mst/mt4103_pci_cr3 06:00.0 net-enp6s0d1,net-enp6s0 -1 ConnectX3Pro(rev:0) /dev/mst/mt4103_pciconf2 ConnectX3Pro(rev:0) /dev/mst/mt4103_pci_cr2 04:00.0 net-enp4s0,net-enp4s0d1 -1 ConnectX3Pro(rev:0) /dev/mst/mt4103_pciconf1 ConnectX3Pro(rev:0) /dev/mst/mt4103_pci_cr1 03:00.0 net-enp3s0,net-enp3s0d1 -1 ConnectX3Pro(rev:0) /dev/mst/mt4103_pciconf0 ConnectX3Pro(rev:0) /dev/mst/mt4103_pci_cr0 01:00.0 net-enp1s0d1,net-enp1s0 -1 Upgrade the Firmware:root@debian:~# mlxfwmanager --online -uQuerying Mellanox devices firmware ... Device #1:---------- Device Type: ConnectX3Pro Part Number: MCX314A-BCC_Ax Description: ConnectX-3 Pro EN network interface card; 40GigE; dual-port QSFP; PCIe3.0 x8 8GT/s; RoHS R6 PSID: MT_1090111023 PCI Device Name: /dev/mst/mt4103_pci_cr3 Port1 MAC: ec0d9a122660 Port2 MAC: ec0d9a122661 Versions: Current Available FW 2.40.5030 2.42.5000 PXE 3.4.0746 3.4.0752 Status: Update required Device #2:---------- Device Type: ConnectX3Pro Part Number: MCX314A-BCC_Ax Description: ConnectX-3 Pro EN network interface card; 40GigE; dual-port QSFP; PCIe3.0 x8 8GT/s; RoHS R6 PSID: MT_1090111023 PCI Device Name: /dev/mst/mt4103_pci_cr2 Port1 MAC: 7cfe90ac0260 Port2 MAC: 7cfe90ac0261 Versions: Current Available FW 2.42.5000 2.42.5000 PXE 3.4.0752 3.4.0752 Status: Up to date Device #3:---------- Device Type: ConnectX3Pro Part Number: MCX314A-BCC_Ax Description: ConnectX-3 Pro EN network interface card; 40GigE; dual-port QSFP; PCIe3.0 x8 8GT/s; RoHS R6 PSID: MT_1090111023 PCI Device Name: /dev/mst/mt4103_pci_cr1 Port1 MAC: ec0d9a1190a0 Port2 MAC: ec0d9a1190a1 Versions: Current Available FW 2.40.5030 2.42.5000 PXE 3.4.0746 3.4.0752 Status: Update requiredDevice #4:---------- Device Type: ConnectX3Pro Part Number: MCX314A-BCC_Ax Description: ConnectX-3 Pro EN network interface card; 40GigE; dual-port QSFP; PCIe3.0 x8 8GT/s; RoHS R6 PSID: MT_1090111023 PCI Device Name: /dev/mst/mt4103_pci_cr0 Port1 MAC: e41d2d24c610 Port2 MAC: e41d2d24c611 Versions: Current Available FW 2.42.5000 2.42.5000 PXE 3.4.0752 3.4.0752 Status: Up to date ---------Found 2 device(s) requiring firmware update... Perform FW update? [y/N]: y Please wait while downloading MFA(s) 100%Device #1: Updating FW ... DoneDevice #2: Up to dateDevice #3: Updating FW ... DoneDevice #4: Up to date Restart needed for updates to take effect.Reset to default settings on all Mellanox cards:root@debian:~# mlxconfig reset Reset configuration for all devices? (y/n) [n] : yApplying... Done!-I- Please reb oot machine to load new configurations.If you are not using the cards for booting, or PXE then its possible to disable it to help speed up the boot process.root@debian:~# mlxconfig -d /dev/mst/mt4103_pciconf0 set BOOT_OPTION_ROM_EN_P1=0 BOOT_OPTION_ROM_EN_P2=0 LEGACY_BOOT_PROTOCOL_P1=0 LEGACY_BOOT_PROTOCOL_P2=0 Device #1:---------- Device type: ConnectX3Pro Device: /dev/mst/mt4103_pciconf0 Configurations: Next Boot New BOOT_OPTION_ROM_EN_P1 True(1) False(0) BOOT_OPTION_ROM_EN_P2 True(1) False(0) LEGACY_BOOT_PROTOCOL_P1 PXE(1) None(0) LEGACY_BOOT_PROTOCOL_P2 PXE(1) None(0) Apply new Configuration? (y/n) [n] : yApplying... Done!-I- Please reboot machine to load new configurations.Delete boot rom (optional)Although we have disabled pxe boot it still doesn’t prevent the boot rom from loading. As the mellanox cards are not using PXE boot we can simply go ahead and remove the entire boot rom.The process must be repeated for each card installed in the systemroot@debian:~# flint -d /dev/mst/mt4103_pciconf0 qroot@debian:~# flint -d /dev/mst/mt4103_pciconf0 -allow_rom_change drom -I- Preparing to remove ROM ...Removing ROM image - OK Restoring signature - OKIntel X710 FIrmwareDownload the latest”Non-Volatile Memory (NVM) Update Utility for Intel® Ethernet Network Adapter 700 Series” pack. The link posted below will probably have expired as Intel has a habit of changing around the URLs.wget https://downloadmirror.intel.com/739636/700Series_NVMUpdatePackage_v9_00.zipunzip 700Series_NVMUpdatePackage_v9_00.zip -d /tmp/rm 700Series_NVMUpdatePackage_v9_00.zip cd /tmp/700Series/Linux_x64./nvmupdate64e Intel(R) Ethernet NVM Update ToolNVMUpdate version 1.37.1.1Copyright(C) 2013 - 2021 Intel Corporation. WARNING: To avoid damage to your device, do not stop the update or reboot or power off the system during this update.Inventory in progress. Please wait [***|......] Num Description Ver.(hex) DevId S:B Status=== ================================== ============ ===== ====== ==============01) Intel(R) I350 Gigabit Network 1.99(1.63) 1521 00:002 Update not Connection available02) Intel(R) Ethernet Server Adapter 6.01(6.01) 1572 00:026 Update OCP X710-2 available Options: Adapter Index List (comma-separated), [A]ll, e[X]itEnter selection: 02Would you like to back up the NVM images? [Y]es/[N]o: nUpdate in progress. This operation may take several minutes.[***|......] # Enter the number of the adapter that states \"Update available\"" }, { "title": "Arista EOS Networking Notes", "url": "/posts/Arista-Network-Notes/", "categories": "network, eos", "tags": "network, eos, arista, switches, mlag", "date": "2022-08-18 10:00:00 +0900", "snippet": "Arista Networking NotesMLAGMLAG Physical Topology Exaample1. VLAN InterfacesFirst, configure a private /30 network to be used for interswitch communication on a VLAN that will be dedicated to MLAG commmunications. Spanning tree also needs to be disabled on the VLAN.Both Switches:no spanning-tree vlan 4094vlan 4094 !! [4094] MLAG Interconnect VLAN (10.254.199.0/30) name mlag-vlan trunk group mlagpeerSwitch 1 (LEAF-SW01):interface Vlan4094 no autostate ip address 10.254.199.1/30 Switch 2 (LEAF-SW01):interface Vlan4094 no autostate ip address 10.254.254.2/302. Port Channel Configuration (Interswitch Connections)Create a port channel as a mlagpeer and assign the interfaces connecting betweeing the switches to the channel.Both Switches:interface Port-Channel999 description mlag-port-channel switchport mode trunk switchport trunk group mlagpeerinterface Ethernet47-50 description mlag-uplinks channel-group 999 mode active3. MLAG ConfigurationThen we need to configure the MLAG configuration. The peer-address statement refers to the partner switch and its recommended to setup a domain-id unique to each pair of switches.Switch 1 (LEAF-SW01):mlag configuration domain-id leaf_sw01_sw02_mlag heartbeat-interval 2500 local-interface Vlan4094 peer-address 10.254.199.2 peer-link Port-Channel999Switch 2 (LEAF-SW02):mlag configuration domain-id leaf_sw01_sw02_mlag heartbeat-interval 2500 local-interface Vlan4094 peer-address 10.254.199.1 peer-link Port-Channel999At this point MLAG should now be operational. Type in show mlag on both switches to verify the mlag status and the peer-configs are consisten.LEAF-SW01#show mlagMLAG Configuration:domain-id : leaf_sw01_sw02_mlaglocal-interface : Vlan4094peer-address : 10.254.199.2peer-link : Port-Channel999peer-config : consistentMLAG Status:state : Activenegotiation status : Connectedpeer-link status : Uplocal-int status : Upsystem-id : 02:1c:73:4c:c8:17MLAG Ports:Disabled : 0Configured : 0Inactive : 0Active-partial : 0Active-full : 04. Connect a server using MLAG This article assumes you have already configured your server for LACP.For reference below is an example of a Debian based operating system configured for LACP# /etc/network/interfacesauto eno1iface eno1 inet manual#Intel x520 LOM - 10gbe - Port 1auto eno2iface eno2 inet manual#Intel x520 LOM - 10gbe - Port 2auto bond0iface bond0 inet manual bond-slaves eno1 eno1 bond-miimon 100 bond-mode 802.3ad # LACP Mode (Requires switch configuration) bond-xmit-hash-policy layer2+3 bond-lacp-rate 1 # LACP Fast to match the switch configuration#Bond for inband managementauto vmbr0iface vmbr0 inet static address 192.168.10.12/24 gateway 192.168.10.1 bridge-ports bond0 bridge-stp off bridge-fd 0# Bridge interface on bond0In this example the server has 2x network ports, and each port is connected to Ethernet 1 of the switch.Both Switches:interface Ethernet1 description \"PROXMOX-SRV01\" lacp rate fast channel-group 1 mode activeinterface Port-Channel1 description \"PROXMOX-SRV01\" switchport mode trunk mlag 1 for simplicity try to match the mlag number to the port-channel number5. Verify MLAG StatusOnce again run show mlag and verify the count for Active-full is 1 for your first server and the config is consistent.LEAF-SW01#show mlagMLAG Configuration:domain-id : leaf_sw01_sw02_mlaglocal-interface : Vlan4094peer-address : 10.254.199.2peer-link : Port-Channel999peer-config : consistentMLAG Status:state : Activenegotiation status : Connectedpeer-link status : Uplocal-int status : Upsystem-id : 02:1c:73:4c:c8:17MLAG Ports:Disabled : 0Configured : 0Inactive : 0Active-partial : 0Active-full : 1The show mlag interfaces command can showLEAF-SW01#show mlag interfaces local/remote mlag desc state local remote status---------- ------------------------------ ----------------- ----------- ------------ ------------ 1 PROXMOX-SRV01 active-full Po1 Po1 up/upOther useful notesEnable 3rd party transceiverslocalhost login: adminlocalhost&gt;enablelocalhost#bashArista Networks EOS shell[admin@localhost ~]$ touch /mnt/flash/enable3px[admin@localhost ~]$ sudo reboot" }, { "title": "Juniper JunOS Networking Notes", "url": "/posts/JunOS-Network-Notes/", "categories": "network, junos", "tags": "network, junos, switches", "date": "2022-08-14 10:00:00 +0900", "snippet": "Juniper ELS Examples (based on EX4300)Native VLANs on EX4300 ELS Switches# Create VLANSset vlans V1001_EMPLOYEE description \"[1001] Employee Network (10.8.240.1/24)\"set vlans V1001_EMPLOYEE vlan-id 1001set vlans V1002_BYOD description \"[1002] Employee Network (10.8.241.1/24)\"set vlans V1002_BYOD vlan-id 1002# ....etc# Configure trunk with native VLANSset interfaces interface-range UNIFI_AP member ge-0/0/47set interfaces interface-range UNIFI_AP member ge-1/0/47set interfaces interface-range UNIFI_AP native-vlan-id 129set interfaces interface-range UNIFI_AP unit 0 family ethernet-switching interface-mode trunkset interfaces interface-range UNIFI_AP unit 0 family ethernet-switching vlan members EMPLOYEEset interfaces interface-range UNIFI_AP unit 0 family ethernet-switching vlan members BYODset interfaces interface-range UNIFI_AP unit 0 family ethernet-switching vlan members GUESTSset interfaces interface-range UNIFI_AP unit 0 family ethernet-switching vlan members MANAGEMENTset poe interface UNIFI_AP Even when setting the native-vlad-id the vlan must also exist as a member of the trunk.Configure LACP uplinkset interfaces ae1 description \"Uplink to Server SRV001\"set interfaces ae1 aggregated-ether-options lacp activeset interfaces ae1 aggregated-ether-options lacp periodic fastset interfaces ae1 unit 0 family ethernet-switching interface-mode accessset interfaces ae1 unit 0 family ethernet-switching vlan members MANAGEMENTset interfaces interface-range SRV001 member ge-0/0/0set interfaces interface-range SRV001 member ge-1/0/0set interfaces interface-range SRV001 ether-options 802.3ad ae1Don’t forget to bumb the agregate count for each aggregate createdset chassis aggregated-devices ethernet device-count 32Other NotesEnsure the LLDP responder shows the interface name instead of the interface indexset protocols lldp port-id-subtype interface-nameConfigure a management IP Address:# Create a irb interfaceinterfaces irb unit 1 family inet address 10.8.251.41/24# Map the irb to the VLANset vlans INBAND-MANAGEMENT l3-interface irb.1# Create a default routeset routing-options static route 0.0.0.0/0 next-hop 10.8.251.1Somtimes with the EX4300 the text can be cut off if your hostname is too long on the lcd screen and it can be hard to identify which switch is which. You can set a custom display messege on the LCD instead.set chassis display fpc-slot 5 message BROKEN-SWITCH" }, { "title": "Unifi Layer 3 Adoption", "url": "/posts/Unifi-Layer3-Adoption/", "categories": "network, unifi", "tags": "network, unifi, network, controller, ubiquiti", "date": "2022-08-14 10:00:00 +0900", "snippet": "Adoption MethodsThere are three options for adopting devices over different networks. DNS Using DHCP options Manual configurationDNSIf you have a internal DNS server that you manage you can simply add a dns A record for unifi pointing to the IP address of your unif controller. As soon as Unifi devices it will begin trying to resolve unifi and if successful it will connect to the Unifi Network Controller.DHCP AdoptionUnifi uses option 43 vendor-specifc to specify the Unifi Controller IP address.pfsensePfsense ues hex code format to specify the unifi controller ip address. To concert an IP address to hex you can use the gethostip command from the syslinux-utils packge in Debain/Ubuntu. Convert the IP to hex sudo apt install -y syslinux-utilsgethostip -x 192.168.46.250C0A82EFA Then append the suboption of 01 and payload lengh of 04 in front of the hex output. The final result would be be 01:04:C0:A8:2E:FA Log into pfsense ➡️ Services ➡️ DHCP Server and scroll down to the bottom of the page to “Other Options” ➡️ Addational BOOTP/DHCP Options. And add the option 43 hex string as pictured below:PFsense DHCP Option for Unifi L3 Adoptionisc-dhcp-server In the /etc/dhcp/dhcpd.conf you will first need to define vendor dhcp option for Unifi. option space ubnt;option ubnt.unifi-address code 1 = ip-address;class \"ubnt\" { match if substring (option vendor-class-identifier, 0, 4) = \"ubnt\"; option vendor-class-identifier \"ubnt\"; vendor-option-space ubnt;} Then in your scope you can simplly put the IP address of the Unifi Network Controller. subnet 192.168.50.0 netmask 255.255.255.0 { option domain-name-servers 1.1.1.1, 8.8.8.8; option routers 192.168.50.1; option ubnt.unifi-address 192.168.46.250; ##&lt;----- Unifi Controller IP Address pool { range 192.168.50.50 192.168.50.250; }} Be sure to restart the dhcp server for the changes to take effect. systemctl restart isc-dhcp-serverWindows Server DHCP On the DHCP Server open a Powershell Terminal (As an administrator). $UNIFI_CONTROLLER_IP = \"172.16.1.4\"$SCOPE = \"192.168.4.0\" # Create the vendor classAdd-DhcpServerv4Class -Name Ubiquiti `-data \"ubnt\" -Type \"Vendor\" # Create a new DHCP option under the vendor class Add-DhcpServerv4OptionDefinition -Name \"UniFi Controller\" -OptionId 1 -Type \"BinaryData\" -VendorClass \"Ubiquiti\" -Description \"Unifi Controller IP as Hex Object\" # Convert the controller IP into command separated hex in the expected format.$ip = \"$UNIFI_CONTROLLER_IP\"$octets = $ip.Split(\".\")$hexOctets = @()foreach ($octet in $octets) { $hexOctets += \"0x{0:X2}\" -f [int]$octet}$hexOctets -join \", \" # Add the controller IP option to the targeted scopeGet-DhcpServerv4Scope $SCOPE | Set-DhcpServerv4OptionValue -VendorClass 'Ubiquiti' -OptionId 001 -Value $hexOctets Manual Adoption (SSH) Connect the Unifi device to the network Locate the IP address of the device and SSH into the device. The default user is ubnt and password is ubnt. Then set the inform URL to the hostname or IP address of your Unifi Network Controller. # Example of setting the inform URL with a FQDNset-inform http://unifi.karubuts.com:8080/inform# Example of setting the inform URL with an IP address. set-inform http://192.168.46.250:8080/inform To confirm the inform URL has been set simple type info in the command prompt. USW-Pro-48-PoE.6.2.14# infoModel: USW-Pro-48-PoE-Version: 6.2.14.13855MAC Address: 24:7a:4c:89:6a:1bIP Address: 192.168.20.10Hostname: USW-Pro-48-PoEUptime: 6509224 seconds-Status: Connected (http://unifi.karubuts.com:8080/inform) The device should be now visable in the Unifi Network Controller dashboard.References UniFi Network - Layer 3 Adoption TCPIP.WTF - Unifi L3 Adoption with DHCP Option 43 on pfSense, Mikrotik and others" }, { "title": "Yubikey and FIDO 2 with SSH", "url": "/posts/Yubikey-and-FIDO2-SSH/", "categories": "linux, ssh", "tags": "yubikey, linux, ssh, fido", "date": "2022-08-14 10:00:00 +0900", "snippet": "To set a FIDO2 pin on a new device:# Check if a PIN has been set:ykman fido info# Set the PIN:ykman fido access change-pinWarning: Resetting the PIN will remove all FIDO2 credentials.# Examplessh-keygen -t ed25519-sk -O resident \\ -O application=ssh:your-text-here \\ -C \"$(date +'%d-%m-%Y')-physical_yubikey_number\"# Actual execution ssh-keygen -t ed25519-sk -O resident \\ -O application=ssh:emergency-ssh-access-desktop-server \\ -C \"Emergency Key 1 - 10532500\" ssh-keygen -t ed25519-sk -O resident \\ -O application=ssh:emergency-ssh-access-desktop-server \\ -C \"Emergency Key 2 - 10653212\" Factors Description Command No PIN or touch are required You will not be required to enter your FIDO2 PIN or touch your YubiKey each time to authenticate ssh-keygen -t ed25519-sk -O resident -O no-touch-required PIN but no touch required Entering the PIN will be required but touching the physical key will not ssh-keygen -t ed25519-sk -O resident -O verify-required -O no-touch-required No PIN but touch is required You will only need to touch the YubiKey to authenticate ssh-keygen -t ed25519-sk -O resident A PIN and a touch are required (most secure) This is the most secure option, it requires both the PIN and touching to be used ssh-keygen -t ed25519-sk -O resident -O verify-required ref. Securing SSH with FIDO2 GitHub now supports SSH security keysUsing a Discoveral (resident) key has several benefits: Portability: Since the private key is stored on the YubiKey, you can use it on multiple devices without having to copy or transfer the key between them. Just plug in the YubiKey, and you can use the resident key for authentication. Enhanced security: Resident keys are protected by the hardware security of the YubiKey. This makes it more difficult for an attacker to access or compromise the private key compared to when it is stored on a computer’s filesystem.However for the best security a non-discoverable credential is preferred. If the key was found they would not be able to use it for ssh access." }, { "title": "Deploying a Unifi Network Controller", "url": "/posts/Unifi-Network-Controller/", "categories": "network, unifi", "tags": "network, unifi, network, controller, ubiquiti, ansible", "date": "2022-08-13 10:00:00 +0900", "snippet": "Unifi Network ControllerThe Unifi Network Controller is a piece of software developed by Ubiquiti Inc, used for managing and administrating Unifi wireless access points, Unifi switches, and Unifi gateways.In the guide we will cover: Installing the Unifi Network Controller with Ansible on bare metal / VM.Its worth pointing out there are a few other options for running the Network Controller with baremetal / VM is not for you.Some alternative options are: Unifi Appliances - The Unifi cloud key, dream machine, dream router has the Unifi Network Controller “App” built in. This is the fastest way to get up and running on Unifi’s own hardware. You can use the Cloud Key Gen 2, or the Dream Machine The team at LinuxServer.io are maintaing a container of the Uniifi Network Controller to get up and running fast. Dockerhub link Cloud hosted Unifi Network Controller. The team over at Hostifi have dedicated managed cloud instances of the Unifi Network Controller. Check them out here.InstallationThe Unifi Network Controller has three main components A database (MangoDB) Java (In this case we will use AdoptJDK) The applicaiton itself.To get up and running as quickly as possible we will use Ansible to take care of the majority of tasks and dependcies for us. It should be noted at the current time of writting, the Unifi debian package will only accept MongoDB 3.x. However MongoDB 3.6 has been end-of-life since April 2021. I honestly hope that Unifi can update their MongoDB support as without it, it can present security risks or more concering would bring into question their commitment for hosting your own network controller and expect you to transition to their appliances. This is exactly what happened with the transisition from Unifi Video to Unifi Protect (an appliance only app).Instalaltion Prerequisies A Debian/Ubuntu based installation. In this guide we will use Debian Bullseye. SSH access is configured and the server is reachable from the client you will run Ansible from. Ansible is installed on your PC.Getting StartedFast track (Ansible)Check out my repositorty for an Ansible playbook that supports both Debian and Ubuntu to get and running with the Unifi Controller in minutes. I did the hard work for you and better yet Ansible helps to document that work.The README.md should contain all the information you need to get started:Github - Karubits - Ansible Unifi Network ControllerTradational ApproachLets do this long way then. As the Cloudkey and other appliances also run Debian, this guide will also just focus on Debian over Ubuntu. There is some logic behind this decision which is also described in the github link above.In a future article I will cover L3 (Layer 3) adoption, the benefits and how to approach adoption. Thank you for reading!TO BE CONTINUED" }, { "title": "Linux Networking Notes", "url": "/posts/Linux-Networking-Notes/", "categories": "linux, networking", "tags": "networking, linux, lpic, notes", "date": "2022-08-12 10:00:00 +0900", "snippet": "Linux Networking NotesA collection of rough notes for working with the networking stack in Linux1. Networking Summary of interfaces, their MAC, and the link status ip -br -c link show A good summary of IP address associated to interfaces ip -br -c addr show List network adapters: lspci | egrep -i --color 'network|ethernet' # Below requires addational packages in Debian hwinfo --network --short lshw -class network Use ethtool to verify physical connectivity ethtool enp0s31f62. Routing Show routing table ip -c route2.1. Non presistent routes Route via external gateway: ip route add {NETWORK/MASK} via {GATEWAYIP} Route via an interface: ip route add {NETWORK/MASK} dev {DEVICE} Default route via a interface: ip route add default {NETWORK/MASK} dev {DEVICE} Default route via a external gateway: ip route add default {NETWORK/MASK} via {GATEWAYIP}2.2. Permement routes# /etc/network/interfacesup /sbin/ip route add {NETWORK/MASK} via {GATEWAYIP} dev eth0down /sbin/ip route delete {NETWORK/MASK} via {GATEWAYIP} dev eth03. Link Layer Discovery Protocol (LLDPD) Install lldpd sudo apt install lldpd Show LLDP Neighbours (e.g. upstream switch) lldpcli show neighbors4. Bonding4.1. Linux Bond Link Aggregation Modes Mode Policy Fault Tolerent Load Balancing Description 0 Round Robin No Yes packets are sequentially transmitted/received through each interfaces one by one. 1 Active Backup Yes No one NIC active while another NIC is asleep. If the active NIC goes down, another NIC becomes active. only supported in x86 environments. 2 XOR (Exclusive OR) Yes Yes In this mode the, the MAC address of the slave NIC is matched up against the incoming request’s MAC and once this connection is established same NIC is used to transmit/receive for the destination MAC. 3 Broadcast Yes No All transmissions are sent on all slaves 4 Dynamic Link Aggregation Yes Yes Switch needs to support IEEE 802.3ad (e.g. LACP) 5 Transmit Load Balancing (TLB) Yes Yes The outgoing traffic is distributed depending on the current load on each slave interface. Incoming traffic is received by the current slave. If the receiving slave fails, another slave takes over the MAC address of the failed slave. 6 Adaptive Load Balancing (ALB) Yes Yes Unlike Dynamic Link Aggregation, Adaptive Load Balancing does not require any particular switch configuration. Adaptive Load Balancing is only supported in x86 environments. The receiving packets are load balanced through ARP negotiation. Source: https://www.mybluelinux.com/bonding-teaming-802.3ad-lacp-on-debian-11-bullseye/#linux-bond-link-aggregation-modesMiimonMiimon is one of the options available for monitoring the status of bond links with the other option being the usage of arp requests. This guide will use miimon. bond-miimon 100 tells the kernel to inspect the link every 100 ms. bond-downdelay 200 means that the system will wait 200 ms before concluding that the currently active interface is indeed down. The bond-updelay 400 is used to tell the system to wait on using the new active interface until 400 ms after the link is brought up. most importantly, updelay and downdelay, both of these values must be multiples of the miimon value otherwise the system will round down. Verify bond status cat /proc/net/bonding/bond04.2. Configure a host for bonding with lacp: # Bonding Support (Old way, see below for ifupdown2) sudo apt install ifenslave modprobe bonding echo 'bonding' &gt;&gt; /etc/modules # VLAN Support apt install vlan modprobe 8021q echo '8021q' &gt;&gt; /etc/modules 4.3. Bonds with VLAN interfacesExample of the network interface files setup to use LACP with Jumbo frames:# /etc/network/interfacesauto bond2iface bond2 inet manual\tbond-slaves ens3 ens3d1\tbond-miimon 100\tbond-mode 802.3ad\tbond-xmit-hash-policy layer2+3\tmtu 9000\tbond-lacp-rate 1Example of the network interfaces file using a bridge interface connecting to a bond with a vlan interface:# /etc/network/interfacesauto vmbr2iface vmbr2 inet static\taddress 172.17.230.43/27\tbridge-ports bond2.231\tbridge-stp off\tbridge-fd 0\tmtu 90005. ifupdown2The ifupdown2 is a package developement by Cumulus Networks allowing for easier operations whenw working with the /etc/network/interfaces files. Instead of working with the ifup and ifdown commands or restart a PC for changes to take effect.apt -y install ifupdown2 This installation may reset your network connections. ifupdown2 can be used to reload all the network interfaces without having to restart the PC ifreload -all6. L2TP over IPSEC VPN Setup CLI sudo apt install strongswan xl2tpd strongswan-starter ipsec up myvpn" } ]
